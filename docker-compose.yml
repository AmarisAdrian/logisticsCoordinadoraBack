version: '3.8'

services:
  app:
    build: .  
    ports:
      - "3000:3000" 
    volumes:
      - ./src:/usr/src/app/src
      - /usr/src/app/node_modules 
      - /usr/src/app/dist 
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    networks:
      app_network:
        ipv4_address: 172.25.0.3

  mysql: 
    image: mysql:8.0
    hostname: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: '%'
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --skip-name-resolve
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/auth-config.sql:/docker-entrypoint-initdb.d/auth-config.sql
      - mysql_data:/var/lib/mysql 
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      app_network:
        ipv4_address: 172.25.0.2

networks:
  app_network:
    driver: bridge
    name: logistics_network
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  mysql_data: